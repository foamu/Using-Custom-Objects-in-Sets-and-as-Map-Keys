import java.util.LinkedHashMap;
import java.util.LinkedHashSet;
import java.util.Map;
import java.util.Set;

class Ship {

	private int id;
	private String name;

	public Ship(int id, String name) {
		this.id = id;
		this.name = name;
	}

	@Override
	public String toString() {
		return "ID is: " + id + "; name is: " + name + "}";
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + id;
		result = prime * result + ((name == null) ? 0 : name.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Ship other = (Ship) obj;
		if (id != other.id)
			return false;
		if (name == null) {
			if (other.name != null)
				return false;
		} else if (!name.equals(other.name))
			return false;
		return true;
	}

}

public class App2 {

	public static void main(String[] args) {
		
		///// Using objects as Keys in maps & adding objects to Sets /////

		Ship s1 = new Ship(1, "Constellation");
		Ship s2 = new Ship(2, "Voyager");
		Ship s3 = new Ship(3, "Invincible");
		Ship s4 = new Ship(1, "Constellation");

		Map<Ship, Integer> map = new LinkedHashMap<Ship, Integer>();

		map.put(s1, 10);
		map.put(s2, 13);
		map.put(s3, 19);
		map.put(s4, 15);

		for (Ship key : map.keySet()) {
			System.out.println(key + ": " + map.get(key));
		}

		Set<Ship> set = new LinkedHashSet<Ship>();

		set.add(s1);
		set.add(s2);
		set.add(s3);
		set.add(s4);

		System.out.println(set);

	}

}
